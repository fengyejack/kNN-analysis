src/ass2_ionosphere.java is the code for knn and wnn of data ionosphere.arff, src/ass2_autos.java is for for knn and wnn of data  autos.arff and src/ass2_autos_encoding.java is for knn and wnn of data  autos.arff with all atribute encoding to calculate.The result of src/ass2_autos.java is in autos.txt , the result of src/ass2_ionosphere.java is in ionosphere.txt and the result of src/ass2_autos_encoding.java is in autos_encoding.txt.The ionosphere.arff and autos.arff are data file.The report.pdf is the report

ionosphere.txt store the result of src/ass2_ionosphere.java. Its each line is like :"2,0.79202276,0.86609685". The first number(2) is the number of k in this test, the second number(0.79202276) is the accuracy of knn result compared with real result in the data and the last number(0.86609685) is the accuracy of knn result compared with real result in the data.

autos.txt store the result of src/ass2_autos.java. Its each line is like :"2,0.044025157,1736.8490566037735,0.06918239,1724.5345911949685". The first number(2) is the number of k in this test, the second number(0.044025157) is the accuracy of knn result compared with real result in the data, the third number(1736.8490566037735) is the average difference of the predict price and the real price for knn, the fouth number(0.06918239) is the accuracy of knn result compared with real result in the data and the last number(1724.5345911949685) is the average difference of the predict price and the real price for wnn.

autos_encoding.txt is similar with autos.txt and store result of src/ass2_autos_encoding.java.

src/ass2_ionosphere.java set Max_k(the max value of k tested) as 20 and can be changed when needed. It use distance_euclidean() to calculate the distance of 2 instance use euclidean distance. The program first get the number of data lines and attributes, then get data and store it in data[][]. Then, the program test accuracy of different k, it frist select a leave_one_out instance, for each one, it get k-nearest instance and store in kNN[].Then use these k-nearest instance to get the number or weigh of each value(b or g) for class and use the most one as the predicted result.Noticed that, if the number of b or g is the same, we set it as g.At last, It compare the predicted result with real result in data and calculate the accuracy of the result for each k. Then output the result.

src/ass2_ass2_autos.java set Max_k(the max value of k tested) as 20 and can be changed when needed. It use distance_difference() to calculate the distance of 2 instance with standardized euclidean distance. The program first get data of 14 continuous, 1 integer attributes,price and store it in data[][]. Then, the program test accuracy of different k, it first select a leave_one_out instance, for each one, it get k-nearest instance and store in kNN[].Then use these k-nearest instance to get the number or weigh of each price for class and use the most one as the predicted result.Noticed that, if the number of 2 price is the same, we set it as the first one.At last, It compare the predicted result with real result in data and calculate the accuracy of the result for each k.It also calculate the average difference of the predicted price and the real price of each k. Then output the result.

src/ass2_autos_encoding.java is similar, however, it encoding all attribute and use them to calculate, not only 14 continuous, 1 integer attributes and price.


